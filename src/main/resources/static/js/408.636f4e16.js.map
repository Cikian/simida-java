{"version":3,"file":"js/408.636f4e16.js","mappings":"u3CA0FAA,EAAAA,EAAAA,KAAU,KACRC,EAAWC,MAAQC,EAAAA,EAAMC,SAASC,OAClCC,EAAWJ,MAAMG,OAASF,EAAAA,EAAMC,SAASC,OACzCC,EAAWJ,MAAMK,SAAWJ,EAAAA,EAAMC,SAASG,SAC3CD,EAAWJ,MAAMM,YAAcL,EAAAA,EAAMC,SAASI,WAAW,IAG3D,MAAMC,GAAQC,EAAAA,EAAAA,IAAI,IAEZC,GAAgBD,EAAAA,EAAAA,IAAI,MAEpBE,GAASF,EAAAA,EAAAA,KAAI,GACbG,GAAiBH,EAAAA,EAAAA,KAAI,GAErBJ,GAAaI,EAAAA,EAAAA,IAAI,CACrBH,SAAU,GACVC,YAAa,GACbH,OAAQ,KAIJJ,GAAaS,EAAAA,EAAAA,IAAI,IAEjBI,EAAYA,CAACC,EAAMC,KACvBf,EAAWC,MAAQe,IAAIC,gBAAgBH,EAAKI,IAAI,EAG5CC,EAAeA,KACnBP,EAAeX,OAAQ,GACF,IAAjBU,EAAOV,OAAkBD,EAAWC,QAAUC,EAAAA,EAAMC,SAASC,QAC/DO,EAAOV,OAAQ,EACfmB,KAEAC,GACF,EAGIA,EAAaA,KACjBC,EAAAA,EAAeC,IAAI,QAAS,CACtBjB,SAAUD,EAAWJ,MAAMK,SAC3BC,YAAaF,EAAWJ,MAAMM,YAC9BH,OAAQC,EAAWJ,MAAMG,QAE3B,CACEoB,QAAS,CAAC,eAAgB,uCAE9BC,MAAMC,IACgB,OAAlBA,EAAIC,KAAKC,OACXC,EAAyB,UAAWH,EAAIC,KAAKG,KAC7C5B,EAAAA,EAAMC,SAAWuB,EAAIC,KAAKA,MAC1BI,EAAAA,EAAAA,IAAoB,QAASL,EAAIC,KAAKK,KAAM,GAC5CV,EAAAA,EAAeW,IAAI,UAAUR,MAAMC,IACX,OAAlBA,EAAIC,KAAKC,QACXG,EAAAA,EAAAA,IAAoB,WAAYL,EAAIC,KAAKA,KAAM,GAC/CzB,EAAAA,EAAMC,SAAWuB,EAAIC,KAAKA,KAAKxB,SAC/BD,EAAAA,EAAMgC,UAAYR,EAAIC,KAAKA,KAAKO,UAChChC,EAAAA,EAAMiC,WAAaT,EAAIC,KAAKA,KAAKQ,WACjCjC,EAAAA,EAAMkC,SAAU,EAClB,IAEJ,GACA,EAEJ,SAAShB,IACP,OAAO,IAAIiB,SAAQ,CAACC,EAASC,KAC3BC,EAAUvC,MAAMwC,SAEhBH,GAAS,GAEb,CAEA,MAAMI,EAAqB,SAAUC,GAEnC,OADAnC,EAAMP,OAAQ2C,EAAAA,EAAAA,IAAoB,SACb,eAAjBD,EAAQE,MAA0C,cAAjBF,EAAQE,MAAyC,cAAjBF,EAAQE,MAC3EC,EAAAA,GAAUC,MAAM,wBACT,KACEJ,EAAQK,KAAO,KAAO,KAAO,MACtCF,EAAAA,GAAUC,MAAM,sBACT,EAGX,EAEME,EAAcA,MAClBH,EAAAA,EAAAA,IAAU,CACRD,KAAM,QACNK,QAAS,QACT,EAGEC,EAAsBC,eAAgB1B,EAAKf,GAC9B,OAAbe,EAAIE,OACNkB,EAAAA,EAAAA,IAAU,CACRD,KAAM,UACNK,QAAS,SAEX7C,EAAWJ,MAAMG,OAASsB,EAAIC,KAAK0B,SACnChC,MAEAyB,EAAAA,EAAAA,IAAU,CACRD,KAAM,UACNK,QAASxB,EAAII,KAGnB,EAEMU,GAAY/B,EAAAA,EAAAA,MAEZoB,EAA2BA,CAACgB,EAAMS,EAAO/C,KAC7CgD,EAAAA,EAAaV,GAAM,CACjBK,QAASI,EACT/C,YAAaA,EACbiD,SAAU,GACV,E,01DCrMJ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://simida-web/./src/views/socialFeedModel/home/pages/editUserMsg/editNormalMsg.vue","webpack://simida-web/./src/views/socialFeedModel/home/pages/editUserMsg/editNormalMsg.vue?3b76"],"sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <div :style=\"{fontSize:'24px',paddingTop:'20px',paddingBottom:'30px',display:'flex',justifyContent:'center'}\">\r\n      账号信息设置\r\n    </div>\r\n\r\n\r\n    <el-form\r\n        ref=\"updateFormRef\"\r\n        :model=\"updateForm\"\r\n    >\r\n      <div :style=\"{display:'flex',justifyContent:'center'}\">\r\n        <el-form-item>\r\n          <el-upload\r\n              ref=\"uploadRef\"\r\n              class=\"avatar-uploader\"\r\n              action=\"/upload\"\r\n              :data=\"{'operationCode': 1}\"\r\n              :headers=\"{ 'Authorization': token }\"\r\n              :show-file-list=\"false\"\r\n              :on-success=\"handleAvatarSuccess\"\r\n              :before-upload=\"beforeAvatarUpload\"\r\n              :on-error=\"uploadError\"\r\n              :auto-upload=\"false\"\r\n              :on-change=\"imgChange\"\r\n          >\r\n\r\n            <img class=\"change-avatar\" :src=\"tempAvatar\"/>\r\n          </el-upload>\r\n\r\n        </el-form-item>\r\n      </div>\r\n\r\n      <el-form-item>\r\n        <span class=\"msg-span\">用户名</span>\r\n        <span>\r\n        <el-input :disabled=\"true\" :placeholder=\"store.userInfo.userName\" class=\"el-input-con\"/>\r\n      </span>\r\n        <div :style=\"{fontSize:'13px',color:'#c2c2c2',marginTop:'-20px',marginLeft:'100px',marginBottom:'20px'}\">\r\n          不可修改\r\n        </div>\r\n      </el-form-item>\r\n\r\n      <el-form-item>\r\n        <span class=\"msg-span\">邮箱</span>\r\n        <span>\r\n        <el-input :disabled=\"true\" :placeholder=\"store.userInfo.email\" class=\"el-input-con\"/>\r\n      </span>\r\n        <div :style=\"{fontSize:'13px',color:'#c2c2c2',marginTop:'-20px',marginLeft:'100px',marginBottom:'20px'}\">\r\n          不可修改\r\n        </div>\r\n      </el-form-item>\r\n\r\n      <el-form-item>\r\n        <span class=\"msg-span\">昵称</span>\r\n        <span>\r\n        <el-input class=\"el-input-con\" v-model=\"updateForm.nickName\" minlength=\"3\" maxlength=\"30\"\r\n                  :placeholder=\"store.userInfo.nickName\"/>\r\n      </span>\r\n        <div :style=\"{fontSize:'13px',color:'#c2c2c2',marginTop:'-20px',marginLeft:'100px',marginBottom:'20px'}\">\r\n          请输入3~30个字符，支持中英文、数字\r\n        </div>\r\n      </el-form-item>\r\n\r\n\r\n      <el-form-item>\r\n        <span class=\"msg-span\">简介</span>\r\n        <span>\r\n        <el-input type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 7}\" v-model=\"updateForm.description\" maxlength=\"60\"\r\n                  :placeholder=\"store.userInfo.description\" class=\"el-input-con\"/>\r\n      </span>\r\n        <div :style=\"{fontSize:'13px',color:'#c2c2c2',marginTop:'-20px',marginLeft:'100px',marginBottom:'60px'}\">\r\n          请输入1~60个字符\r\n        </div>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n  <div class=\"btn-box\">\r\n    <a-button type=\"primary\" class=\"save-btn\" @click=\"submitUpdate()\">保存</a-button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {store} from \"@/store\";\r\nimport {onMounted, ref} from \"vue\";\r\nimport {getLocalStorageItem, setLocalStorageItem} from \"@/utils/data\";\r\nimport {ElForm, ElMessage} from \"element-plus\";\r\nimport requestService from \"@/utils/request\";\r\nimport {notification} from \"ant-design-vue\";\r\n\r\nonMounted(() => {\r\n  tempAvatar.value = store.userInfo.avatar\r\n  updateForm.value.avatar = store.userInfo.avatar\r\n  updateForm.value.nickName = store.userInfo.nickName\r\n  updateForm.value.description = store.userInfo.description\r\n});\r\n\r\nconst token = ref(\"\")\r\n\r\nconst updateFormRef = ref(null);\r\n\r\nconst upload = ref(true)\r\nconst spinningUpdate = ref(false)\r\n\r\nconst updateForm = ref({\r\n  nickName: \"\",\r\n  description: \"\",\r\n  avatar: \"\",\r\n})\r\n\r\n\r\nconst tempAvatar = ref('')\r\n\r\nconst imgChange = (file, fileList) => {\r\n  tempAvatar.value = URL.createObjectURL(file.raw)\r\n}\r\n\r\nconst submitUpdate = () => {\r\n  spinningUpdate.value = true\r\n  if (upload.value === true && tempAvatar.value !== store.userInfo.avatar) {\r\n    upload.value = false\r\n    uploadAvatar()\r\n  } else {\r\n    updateUser()\r\n  }\r\n}\r\n\r\nconst updateUser = () => {\r\n  requestService.put(\"/user\", {\r\n        nickName: updateForm.value.nickName,\r\n        description: updateForm.value.description,\r\n        avatar: updateForm.value.avatar\r\n      },\r\n      {\r\n        headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n      }\r\n  ).then((res) => {\r\n    if (res.data.code === 4001) {\r\n      openNotificationWithIcon('success', res.data.msg)\r\n      store.userInfo = res.data.data\r\n      setLocalStorageItem(\"token\", res.data.path, 5)\r\n      requestService.get('/user/').then((res) => {\r\n        if (res.data.code === 2001) {\r\n          setLocalStorageItem(\"userInfo\", res.data.data, 5)\r\n          store.userInfo = res.data.data.userInfo\r\n          store.followers = res.data.data.followers\r\n          store.followings = res.data.data.followings\r\n          store.isLogin = true\r\n        }\r\n      })\r\n    }\r\n  })\r\n}\r\nfunction uploadAvatar() {\r\n  return new Promise((resolve, reject) => {\r\n    uploadRef.value.submit();\r\n\r\n    resolve()\r\n  })\r\n}\r\n\r\nconst beforeAvatarUpload = function (rawFile) {\r\n  token.value = getLocalStorageItem(\"token\")\r\n  if (rawFile.type !== 'image/jpeg' && rawFile.type !== 'image/png' && rawFile.type !== 'image/gif') {\r\n    ElMessage.error('头像只允许JPG、PNG或GIF格式!');\r\n    return false;\r\n  } else if (rawFile.size / 1024 / 1024 > 10) {\r\n    ElMessage.error('上传的头像文件大小不能 10MB!');\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst uploadError = () => {\r\n  ElMessage({\r\n    type: 'error',\r\n    message: '上传失败'\r\n  })\r\n}\r\n\r\nconst handleAvatarSuccess = async function (res, upload) {\r\n  if (res.code === 1001) {\r\n    ElMessage({\r\n      type: 'success',\r\n      message: '上传成功'\r\n    })\r\n    updateForm.value.avatar = res.data.filePath\r\n    updateUser()\r\n  } else {\r\n    ElMessage({\r\n      type: 'warning',\r\n      message: res.msg\r\n    })\r\n  }\r\n};\r\n\r\nconst uploadRef = ref();\r\n\r\nconst openNotificationWithIcon = (type, title, description) => {\r\n  notification[type]({\r\n    message: title,\r\n    description: description,\r\n    duration: 2\r\n  });\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.content {\r\n  margin-top: 20px;\r\n  background-color: white;\r\n  border-radius: 5px;\r\n}\r\n\r\n.change-avatar {\r\n  width: 8rem;\r\n  height: 8rem;\r\n  object-fit: cover;\r\n  border-radius: 999px;\r\n  margin-top: 50px;\r\n  margin-bottom: 50px;\r\n  border: 5px rgb(229, 229, 229) solid;\r\n}\r\n\r\n.el-input-con {\r\n//display: flex; width: 500px; border: none; border-radius: 3px;\r\n  background-color: #c2c2c2;\r\n  margin-left: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.msg-span {\r\n  width: 80px;\r\n  text-align: right;\r\n  margin-bottom: 20px;\r\n  padding-left: 30px;\r\n}\r\n\r\n.btn-box {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n</style>","import script from \"./editNormalMsg.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./editNormalMsg.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./editNormalMsg.vue?vue&type=style&index=0&id=afd75244&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-afd75244\"]])\n\nexport default __exports__"],"names":["onMounted","tempAvatar","value","store","userInfo","avatar","updateForm","nickName","description","token","ref","updateFormRef","upload","spinningUpdate","imgChange","file","fileList","URL","createObjectURL","raw","submitUpdate","uploadAvatar","updateUser","requestService","put","headers","then","res","data","code","openNotificationWithIcon","msg","setLocalStorageItem","path","get","followers","followings","isLogin","Promise","resolve","reject","uploadRef","submit","beforeAvatarUpload","rawFile","getLocalStorageItem","type","ElMessage","error","size","uploadError","message","handleAvatarSuccess","async","filePath","title","notification","duration","__exports__"],"sourceRoot":""}